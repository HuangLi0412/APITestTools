import jsonimport osimport requestsimport loggingfrom common import readConfigreadconfig = readConfig.ReadConfig()class baseApi(object):    def __init__(self, method, url, data, headers):        self.method = method        self.url = url        self.data = data        self.headers = headers    def baseApi(self):        global results, message, response        try:            if self.method == "post":                # if(self.url).find("upload"):                # results = requests.post(self.url, self.data, headers=json.loads(self.headers))                results = requests.post(self.url, self.data, headers=json.loads(self.headers))            if self.method == "get":                if self.data == 'null':                    results = requests.get(self.url)                else:                    results = requests.get(self.setUrl(), headers=json.loads(self.headers))            if self.method == "put":                results = requests.put(self.url, self.data, headers=json.loads(self.headers))            if self.method == "delete":                results = requests.delete(self.setUrl(), headers=json.loads(self.headers))            if results.content:                response = results.json()            return response        except Exception as e:            logging.error("service is error", e)    def getMessage(self, response):        global msg        if response:            msg = response.get("message")        return msg    def getData(self, response):        global data        if response:            data = response.get("data")        return data    def getStatus(self, response):        global status        if response:            status = response.get('status')        return status    def setUrl(self):        idName = (self.url)[-4:]        name = idName.replace('{', '').replace('}', '')        id = self.setParams(name)        url_prifx = (self.url).replace(idName, '')        url = url_prifx + str(id)        return url    def setParams(self, name):        dict = json.loads(self.data)        params = dict[name]        return params    def get_url(self):        url = readconfig.get_http('scheme') + '://' + readconfig.get_http('baseurl') + ":" + readconfig.get_http(            "port") + "/" + readconfig.get_http("params")        return url    def get_path(self):        path = os.path.split(os.path.realpath(__file__))[0]        return path    def get_excel(self):        excel_path = readconfig.get_excel('path')        return excel_path